// <auto-generated />
using System;
using GoodNeighborHouse.TimeCard.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GoodNeighborHouse.TimeCard.Data.Migrations
{
    [DbContext(typeof(GNHContext))]
    [Migration("20191019161327_PunchForeignKeys")]
    partial class PunchForeignKeys
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GoodNeighborHouse.TimeCard.Data.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4240b56-6ff2-e911-9ae8-d0c637a95ae1"),
                            Name = "Dental"
                        },
                        new
                        {
                            Id = new Guid("b5240b56-6ff2-e911-9ae8-d0c637a95ae1"),
                            Name = "Human Services"
                        },
                        new
                        {
                            Id = new Guid("b6240b56-6ff2-e911-9ae8-d0c637a95ae1"),
                            Name = "Medical"
                        });
                });

            modelBuilder.Entity("GoodNeighborHouse.TimeCard.Data.Entities.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("GoodNeighborHouse.TimeCard.Data.Entities.Punch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnName("DepartmentId")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<bool>("IsClockIn")
                        .HasColumnName("IsClockIn")
                        .HasColumnType("BIT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<Guid>("LastUpdatedBy")
                        .HasColumnName("LastUpdatedBy")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<DateTime>("PunchTime")
                        .HasColumnName("PunchTime")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("VolunteerId")
                        .HasColumnName("VolunteerId")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LastUpdatedBy");

                    b.HasIndex("VolunteerId");

                    b.ToTable("Punches");
                });

            modelBuilder.Entity("GoodNeighborHouse.TimeCard.Data.Entities.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnName("DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnName("PIN")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.HasKey("Id");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("GoodNeighborHouse.TimeCard.Data.Entities.Punch", b =>
                {
                    b.HasOne("GoodNeighborHouse.TimeCard.Data.Entities.Volunteer", "PunchCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoodNeighborHouse.TimeCard.Data.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoodNeighborHouse.TimeCard.Data.Entities.Volunteer", "PunchLastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoodNeighborHouse.TimeCard.Data.Entities.Volunteer", "Volunteer")
                        .WithMany()
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
